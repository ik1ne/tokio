error[E0308]: mismatched types
 --> tests/fail/macros_type_mismatch.rs:5:5
  |
5 |     Ok(())
  |     ^^^^^^ expected `()`, found `Result<(), _>`
  |
  = note: expected unit type `()`
                  found enum `Result<(), _>`
help: a return type might be missing here
  |
4 | async fn missing_semicolon_or_return_type() -> _ {
  |                                             ++++
help: consider using `Result::expect` to unwrap the `Result<(), _>` value, panicking if the value is a `Result::Err`
  |
5 |     Ok(()).expect("REASON")
  |           +++++++++++++++++

error[E0308]: mismatched types
  --> tests/fail/macros_type_mismatch.rs:10:5
   |
10 |     return Ok(());
   |     ^^^^^^^^^^^^^^ expected `()`, found `Result<(), _>`
   |
   = note: expected unit type `()`
                   found enum `Result<(), _>`
help: a return type might be missing here
   |
9  | async fn missing_return_type() -> _ {
   |                                ++++
help: consider using `Result::expect` to unwrap the `Result<(), _>` value, panicking if the value is a `Result::Err`
   |
10 |     return Ok(());.expect("REASON")
   |                   +++++++++++++++++

error[E0308]: mismatched types
  --> tests/fail/macros_type_mismatch.rs:23:5
   |
14 | async fn extra_semicolon() -> Result<(), ()> {
   |                               -------------- expected `Result<(), ()>` because of return type
...
23 |     Ok(());
   |     ^^^^^^^ expected `Result<(), ()>`, found `()`
   |
   = note:   expected enum `Result<(), ()>`
           found unit type `()`
help: try adding an expression at the end of the block
   |
23 ~     Ok(());;
24 +     Ok(())
   |

error[E0308]: mismatched types
  --> tests/fail/macros_type_mismatch.rs:32:5
   |
30 | async fn issue_4635() {
   |                      - help: try adding a return type: `-> i32`
31 |     return 1;
32 |     ;
   |     ^ expected `()`, found integer

error[E0277]: the `?` operator can only be used in an async block that returns `Result` or `Option` (or another type that implements `FromResidual`)
  --> tests/fail/macros_type_mismatch.rs:37:11
   |
35 | #[tokio::main]
   | -------------- this function should return `Result` or `Option` to accept `?`
36 | async fn extra_semicolon_with_try_operator() -> Result<(), ()> {
37 |     Ok(())?;
   |           ^ cannot use the `?` operator in an async block that returns `()`
   |
   = help: the trait `FromResidual<Result<Infallible, _>>` is not implemented for `()`

error[E0308]: mismatched types
  --> tests/fail/macros_type_mismatch.rs:38:5
   |
36 | async fn extra_semicolon_with_try_operator() -> Result<(), ()> {
   |                                                 -------------- expected `Result<(), ()>` because of return type
37 |     Ok(())?;
38 |     Ok(());
   |     ^^^^^^^ expected `Result<(), ()>`, found `()`
   |
   = note:   expected enum `Result<(), ()>`
           found unit type `()`
help: try adding an expression at the end of the block
   |
38 ~     Ok(());;
39 +     Ok(())
   |
